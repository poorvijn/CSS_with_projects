@import url("https://fonts.googleapis.com/css2?family=Nunito&display=swap");

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

html {
  font-size: 1.5rem;
  font-family: 'Nunito', sans-serif;
}

body {
  min-height: 100vh;
  display: flex;
  flex-flow: column nowrap;
}

main {
  flex-grow: 1;
  display: flex;
  flex-flow: column nowrap;
  justify-content: center;
  align-items: center;
  gap: 1rem;
}

div {
  width: 200px;
  height: 200px;
  border: 1px solid #000;
  display: grid;
  place-content: center;
}

div:first-child{
    background-color: dodgerblue;
}

div:nth-child(2){
    background-color: yellow;
}
div:last-child{
    background-color: limegreen;
}

div:hover{
    background-color: midnightblue;
    /* transition-property: background-color, transform; 
    transition-duration: 2s, 3s;
    transition-delay: 0.5s; 
    transition-timing-function: linear; --> ease is default */
    /* transition:elements to apply to  time to complete transition timing delay in transition */
    transition: all 2s ease-in-out 0.5s;
}

div:last-child:hover{
    transform: rotate(180deg);
}

/* keyframes need to be applied for the animation to work */
 .animate { 
    /* animation-name: slide;
    animation-duration: 5s;
    animation-timing-function: ease-in-out;
    animation-delay: 1s;
    animation-iteration-count: 2;
    animation-direction: normal;
    animation-fill-mode: forwards;  */
    animation: 5s ease-in-out 1s 2 normal forwards slide;
   } 
  
  @keyframes slide {
    0% {
      transform: translateX(0);
    }
  
    33% {
        transform: translateX(300px) rotate(180deg);
    }
  
    66% {
        transform: translateX(-300px) rotate(-180deg);
    }
  
    100% {
      transform: translateX(0);
      background-color: rebeccapurple;
    }
  }

  
/* transform: rotate() property---
rotate is same as rotateZ(numberdeg). rotateX() rotates from top to bottom, rotateY() rotates from left to right */

/* transform: translate() property---
translate(x%, y%). translateX() moves element left and right, translateY() moves element up and down*/

/* transform: scale() property---
scale(x%, y%). scaleX() expands/shrinks element along the left and right, scaleY() does it up and down */

/* transform: skew() property---
skew(xdeg, ydeg). skewX() tilts element along the left and right, skewY() does it up and down */